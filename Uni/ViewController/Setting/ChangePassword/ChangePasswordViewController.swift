//
//  ChangePasswordViewController.swift
//  Uni
//
//  Created nguyen gia huy on 02/12/2020.
//  Copyright © 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Edward
//

import UIKit

class ChangePasswordViewController: BaseViewController {

    @IBOutlet weak var spinner: UIActivityIndicatorView!
    @IBOutlet weak var lbChangePassword: UILabel!
    @IBOutlet weak var lbEnterYour: UILabel!
    @IBOutlet weak var lbNewPassword: UILabel!
    @IBOutlet weak var lbConfirmPassword: UILabel!
    @IBOutlet weak var txtNewPassword: UITextField!
    @IBOutlet weak var txtConfỉrmPassword: UITextField!
    @IBOutlet weak var btSave: UIButton!
    var presenter: ChangePasswordPresenterProtocol

	init(presenter: ChangePasswordPresenterProtocol) {
        self.presenter = presenter
        super.init(nibName: "ChangePasswordViewController", bundle: nil)
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

	override func viewDidLoad() {
        presenter.view = self
        setupLanguage()
        setupUI()
        
    }
    
    func setupLanguage(){
        lbChangePassword.text = AppLanguage.ChangePassword.ChangePassword.localized
        lbEnterYour.text = AppLanguage.ChangePassword.EnterYourNew.localized
        lbNewPassword.text = AppLanguage.ChangePassword.NewPassword.localized
        txtNewPassword.placeholder = AppLanguage.Password.localized
        lbConfirmPassword.text = AppLanguage.ChangePassword.ConfirmPassword.localized
        txtConfỉrmPassword.placeholder = AppLanguage.Password.localized
        btSave.setTitle(AppLanguage.Save.localized, for: .normal)
        addBackToNavigation()
        
    }
    
    func setupUI(){
        btSave.backgroundColor = AppColor.YellowFAB32A
        btSave.shadowColor = AppColor.YellowFBC459
        lbEnterYour.textColor = AppColor.YellowFAB32A
        spinner.isHidden = true
    }
    @IBAction func btSave(_ sender: Any) {
        btSave.isHidden = true
        spinner.startAnimating()
        spinner.isHidden = false
        if let newPassword = txtNewPassword.text, let confirmPassword = txtConfỉrmPassword.text {
            if newPassword == confirmPassword {
                presenter.changePassword(newPassword: confirmPassword)
            } else {
                showAlert(title: AppLanguage.HandleError.anError.localized, message: AppLanguage.HandleError.NewnotsameConfirm.localized, actionTitles: [AppLanguage.Ok.localized], style: [.cancel], actions: [.none])
            }
            
        } else {return}
    }
    

    
}

extension ChangePasswordViewController: ChangePasswordViewProtocol {
    func changePasswordSuccess() {
        btSave.isHidden = false
        spinner.stopAnimating()
        spinner.isHidden = true
        presentAlertWithTitle(title: AppLanguage.HandleSuccess.Success.localized, message: AppLanguage.HandleSuccess.changePassword.localized, options: AppLanguage.Ok.localized) { (Int) in
            self.navigationController?.popViewController(animated: true)
        }
        
    }
    
    func changePasswordFailed(error: Error) {
        handleError(error)
        btSave.isHidden = false
        spinner.stopAnimating()
        spinner.isHidden = true
    }
}
