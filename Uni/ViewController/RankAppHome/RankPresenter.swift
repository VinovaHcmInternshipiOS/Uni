//
//  RankPresenter.swift
//  Uni
//
//  Created nguyen gia huy on 05/11/2020.
//  Copyright Â© 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Edward
//

import Foundation
import FirebaseAuth
import FirebaseDatabase
import Firebase
import FirebaseStorage
import UIKit

// MARK: View -
protocol RankViewProtocol: class {
    func fetchRankSuccess()
    func fetchRanhFailed()
}

// MARK: Presenter -
protocol RankPresenterProtocol: class {
    var view: RankViewProtocol? { get set }
    var rankEvent: [RankEvent?] { get set}
    var nameProfile: String {get set}
    var scoreProfile: String {get set}
    var isFindUserRank: Bool {get set}
    var code: String? {get set}
    func fetchRank()
}

class RankPresenter: RankPresenterProtocol {
    var rankProfile: Int = 0
    var isFindUserRank: Bool = false
    var code: String?
    var nameProfile = ""
    var scoreProfile = ""
    weak var view: RankViewProtocol?
    var ref = Database.database().reference()
    var databaseHandle = DatabaseHandle()
    let user = Auth.auth().currentUser
    let storageRef = Storage.storage().reference()
    var rankEvent: [RankEvent?] = []
    
    init(code: String) {
        self.code = code
    }
    
    func fetchRank() {
        rankEvent.removeAll()
        ref.child("Data").observeSingleEvent(of:.value, with: { [self](snapshot) in
            if(snapshot.exists()) {
                for keyUser in snapshot.children.allObjects as! [DataSnapshot] {
                    
                    let placeRef = self.ref.child("Data/\(keyUser.key)")
                    placeRef.observeSingleEvent(of: .value, with: { [self] snapshot in
                        if snapshot.exists()
                        {
                            let placeDict = snapshot.value as! [String: Any]
                            let name = placeDict["Name"] as? String ?? ""
                            let score = placeDict["Score"] as? Int ?? 0
                            let imgURL = placeDict["Image"] as? String ?? ""
                            if score != 0 {
                                if (!isFindUserRank) {rankProfile += 1}
                                rankEvent.insert(RankEvent(name: name, score: score, code: keyUser.key ,imgURL: imgURL), at: 0)
                                if (keyUser.key == code) {
                                    isFindUserRank = true
                                    nameProfile = name
                                    scoreProfile = String(score)
                                }
                                rankEvent.sort(by: {(($0?.score)! >= ($1?.score)!)})
                                view?.fetchRankSuccess()
                            }
                        }
                        else {
                            view?.fetchRanhFailed()
                        }
                    })
                }
            } else {
                view?.fetchRanhFailed()
            }
        })
    }
}
