//
//  RankViewController.swift
//  Uni
//
//  Created nguyen gia huy on 05/11/2020.
//  Copyright Â© 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Edward
//

import UIKit

class RankViewController: BaseViewController {

    @IBOutlet weak var lbNameProfile: UILabel!
    @IBOutlet weak var lbRankProfile: UILabel!
    @IBOutlet weak var lbScore: UILabel!
    @IBOutlet weak var lbRank: UILabel!
    @IBOutlet weak var lbScoreRank3: UILabel!
    @IBOutlet weak var lbNameRank3: UILabel!
    @IBOutlet weak var imgRank3: UIImageView!
    @IBOutlet weak var lbScoreRank1: UILabel!
    @IBOutlet weak var lbNameRank1: UILabel!
    @IBOutlet weak var imgRank1: UIImageView!
    @IBOutlet weak var lbScoreRank2: UILabel!
    @IBOutlet weak var lbNameRank2: UILabel!
    @IBOutlet weak var imgRank2: UIImageView!
    @IBOutlet weak var heightTableView: NSLayoutConstraint!
    @IBOutlet weak var viewScore: UIView!
    @IBOutlet weak var tableView: UITableView!
    var presenter: RankPresenterProtocol
    var rankEvent = [RankEvent?]()
	init(presenter: RankPresenterProtocol) {
        self.presenter = presenter
        super.init(nibName: "RankViewController", bundle: nil)
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

	override func viewDidLoad() {
        super.viewDidLoad()

        presenter.view = self
        presenter.fetchRank()
        setupXIB()
        setupLanguage()
    }
    override func viewDidAppear(_ animated: Bool) {
        viewScore.roundCorners([.topLeft,.topRight], radius: 20)
    }
    
    func setupLanguage(){
        lbRank.text = AppLanguage.Rank.Rank.localized
        lbScore.text = AppLanguage.Rank.Score.localized
    }
    
    func setupXIB(){
        tableView.delegate = self
        tableView.dataSource = self
        tableView.register(UINib(nibName: "RankTableViewCell", bundle: nil), forCellReuseIdentifier: "RankTableViewCell")
        
        
    }
    

}

extension RankViewController: UITableViewDataSource {
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        if rankEvent.count > 3 {
            return rankEvent.count - 3
        } else {
            return 0
        }
        
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        if indexPath.row > 2 {
            guard let cell = tableView.dequeueReusableCell(withIdentifier: "RankTableViewCell", for: indexPath) as? RankTableViewCell else { return UITableViewCell()}
            cell.lbRank.text = "\(indexPath.row + 1)"
            cell.lbName.text = rankEvent[indexPath.row]?.name
            cell.lbScore.text = "\(rankEvent[indexPath.row]?.score ?? 0)"
            return cell
        }
        return UITableViewCell()
        
    }
    
    
}

extension RankViewController: UITableViewDelegate {
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 100
    }
    
    func tableView(_ tableView: UITableView, willDisplay cell: UITableViewCell, forRowAt indexPath: IndexPath) {
        self.tableView.layoutIfNeeded()
        self.heightTableView.constant = self.tableView.contentSize.height
    }
}

extension RankViewController: RankViewProtocol {
    func fetchProfileRankSuccess() {
        lbNameProfile.text = presenter.nameProfile
        lbScore.text = "\(AppLanguage.Rank.Score.localized) \(presenter.scoreProfile)"
        lbRankProfile.text = "\(presenter.searchRankProfile())"
    }
    
    func fetchProfileRankFailed() {
        lbNameProfile.text = ""
        lbScore.text = ""
        print("fetch profile rank failed")
    }
    
    func fetchRankSuccess() {
        rankEvent = presenter.rankEvent
        for i in 0..<rankEvent.count {
            if i == 0 {
                lbNameRank1.text = rankEvent[i]?.name ?? ""
                lbScoreRank1.text = "\(rankEvent[i]?.score ?? 0)"
                if let eventURL = rankEvent[i]?.imgURL {
                    imgRank1.loadImage(urlString: eventURL)
                }
            } else if i == 1 {
                lbNameRank2.text = rankEvent[i]?.name ?? ""
                lbScoreRank2.text = "\(rankEvent[i]?.score ?? 0)"
                if let eventURL = rankEvent[i]?.imgURL {
                    imgRank2.loadImage(urlString: eventURL)
                }
            } else if i == 2 {
                lbNameRank3.text = rankEvent[i]?.name ?? ""
                lbScoreRank3.text = "\(rankEvent[i]?.score ?? 0)"
                if let eventURL = rankEvent[i]?.imgURL {
                    imgRank3.loadImage(urlString: eventURL)
                }
            }
        }
        tableView.reloadData()
        presenter.fetchProfileRank()
    }
    
    func fetchRanhFailed() {
        print("fetch rank failed")
    }
    
    
}
