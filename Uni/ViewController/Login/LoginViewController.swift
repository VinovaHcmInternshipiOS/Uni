//
//  LoginViewController.swift
//  Uni
//
//  Created nguyen gia huy on 02/11/2020.
//  Copyright Â© 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Edward
//

import UIKit

class LoginViewController: BaseViewController {


    @IBOutlet weak var btForgotPassword: UILabel!
    @IBOutlet weak var btSignup: UILabel!
    @IBOutlet weak var txtEmail: UITextField!
    @IBOutlet weak var txtPassword: UITextField!
    
    var presenter: LoginPresenterProtocol
    var tapGesture = UITapGestureRecognizer()

	init(presenter: LoginPresenterProtocol) {
        self.presenter = presenter
        super.init(nibName: "LoginViewController", bundle: nil)
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

	override func viewDidLoad() {
        super.viewDidLoad()
        presenter.view = self
        desginUI()
        showNavigation(bottomLine: false)
       
    }
    
    func desginUI(){
        
        // Go to ForgotPaswordVC
        let rightTap = UITapGestureRecognizer(target: self, action: #selector(LoginViewController.gotoForgotPasswordVC(_:)))
        btForgotPassword.isUserInteractionEnabled = true
        btForgotPassword.addGestureRecognizer(rightTap)
    }
    
    @objc func gotoForgotPasswordVC(_ recognizer: UIGestureRecognizer) {
        let ForgotPasswordVC = ForgotPasswordViewController(presenter: ForgotPasswordPresenter())
        self.navigationController?.pushViewController(ForgotPasswordVC, animated: true)
    }
    
    @IBAction func gotoAppHomeVC(_ sender: Any) {
        self.showSpinner()
        presenter.siginIn(email: txtEmail.text!, password: txtPassword.text!)
        
    }
    let okActionHandler: ((UIAlertAction) -> Void) = {(action) in
        print("OK")
    }

    let cancelActionHandler: ((UIAlertAction) -> Void) = {(action) in
        print("Error")
    }
    
}

extension LoginViewController: LoginViewProtocol {
    
    func loginSuccess() {
        removeSpinner()
        UserDefaults.standard.set(false, forKey: "status")
        Switcher.updateRootVC()
        let AppHomeVC = AppHomeViewController(presenter: AppHomePresenter())
        self.navigationController?.pushViewController(AppHomeVC, animated: true)
        
        
    }
    
    func loginFailed(error: Error) {
        removeSpinner()
        handleError(error)
        
    }
}
