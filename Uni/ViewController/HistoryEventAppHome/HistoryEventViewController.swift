//
//  HistoryEventViewController.swift
//  Uni
//
//  Created nguyen gia huy on 06/11/2020.
//  Copyright Â© 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Edward
//

import UIKit

class HistoryEventViewController: UIViewController, HistoryEventViewProtocol {

    @IBOutlet weak var collectionView: UICollectionView!
    @IBOutlet weak var heightCollectionView: NSLayoutConstraint!
    var presenter: HistoryEventPresenterProtocol

	init(presenter: HistoryEventPresenterProtocol) {
        self.presenter = presenter
        super.init(nibName: "HistoryEventViewController", bundle: nil)
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

	override func viewDidLoad() {
        super.viewDidLoad()

        presenter.view = self
        presenter.viewDidLoad()
        setupUI()
    }
    
    func setupUI(){
        collectionView.dataSource = self
        collectionView.delegate = self
        collectionView.register(UINib(nibName:"HistoryCell", bundle: nil), forCellWithReuseIdentifier: "HistoryCell")
        collectionView.register(UINib(nibName: "HeaderHistory", bundle: nil), forSupplementaryViewOfKind: UICollectionView.elementKindSectionHeader, withReuseIdentifier: "HeaderHistory")
        
        collectionView.register(UINib(nibName: "HeaderHistory", bundle: nil), forSupplementaryViewOfKind: UICollectionView.elementKindSectionFooter, withReuseIdentifier: "HeaderHistory")

    }

}

extension HistoryEventViewController: UICollectionViewDelegate,UICollectionViewDelegateFlowLayout {
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
        return CGSize(width: collectionView.frame.width / 2 - 10, height: collectionView.frame.width / 2 - 10 )
    }
    
    func collectionView(_ collectionView: UICollectionView, viewForSupplementaryElementOfKind kind: String, at indexPath: IndexPath) -> UICollectionReusableView {
        switch kind {

        case UICollectionView.elementKindSectionHeader:

            if let headerView = collectionView.dequeueReusableSupplementaryView(ofKind: kind, withReuseIdentifier: "HeaderHistory", for: indexPath) as? HeaderHistory {
                headerView.backgroundColor = .none
                headerView.lbYear.text = "\(2020+indexPath.section)"
                
                return headerView
            } else {
                return UICollectionReusableView()
            }
            
        case UICollectionView.elementKindSectionFooter:
            let headerView = collectionView.dequeueReusableSupplementaryView(ofKind: kind, withReuseIdentifier: "HeaderHistory", for: indexPath)

            return headerView
            
        default:

            assert(false, "Unexpected element kind")
        }
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, referenceSizeForHeaderInSection section: Int) -> CGSize {
            return CGSize(width: collectionView.frame.width, height: 45)
    }
        func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, referenceSizeForFooterInSection section: Int) -> CGSize {
            return CGSize(width: 0, height: 0)
    }
    
}

extension HistoryEventViewController: UICollectionViewDataSource {
    
    func collectionView(_ collectionView: UICollectionView, willDisplay cell: UICollectionViewCell, forItemAt indexPath: IndexPath) {
        self.collectionView.layoutIfNeeded()
        self.heightCollectionView.constant = self.collectionView.contentSize.height
    }

    func numberOfSections(in collectionView: UICollectionView) -> Int {
        return 4
    }
    
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return 2
    }
    
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        let semesterEvent = SemesterScoreViewController(presenter: SemesterScorePresenter())
        self.navigationController?.pushViewController(semesterEvent, animated: true)
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        if let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "HistoryCell", for: indexPath) as? HistoryCell {
            if indexPath.row == 1 {
                cell.lbSemester.text = "2"
            }
            return cell
        }
        else {
            return UICollectionViewCell()
        }
    }
    
    
}
