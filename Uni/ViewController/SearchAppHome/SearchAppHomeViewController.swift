//
//  SearchAppHomeViewController.swift
//  Uni
//
//  Created nguyen gia huy on 06/11/2020.
//  Copyright Â© 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Edward
//

import UIKit

class SearchAppHomeViewController: UIViewController, SearchAppHomeViewProtocol {

    @IBOutlet weak var tableView: UITableView!

    var presenter: SearchAppHomePresenterProtocol

	init(presenter: SearchAppHomePresenterProtocol) {
        self.presenter = presenter
        super.init(nibName: "SearchAppHomeViewController", bundle: nil)
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

	override func viewDidLoad() {
        super.viewDidLoad()

        presenter.view = self
        presenter.viewDidLoad()
        setupUI()
    }
    
    func setupUI(){
        tableView.dataSource = self
        tableView.delegate = self
        tableView.register(UINib(nibName: "SearchResultCell", bundle: nil), forCellReuseIdentifier: "SearchResultCell")
        tableView.register(UINib(nibName: "SearchEventLabelCell", bundle: nil), forCellReuseIdentifier: "SearchEventLabelCell")
        
        tableView.register(UINib(nibName: "SearchEventTextFieldHeader", bundle: nil), forHeaderFooterViewReuseIdentifier: "SearchEventTextFieldHeader")
        
        
    }
    
    override func viewDidAppear(_ animated: Bool) {
    }
    @objc func gotoDetailEvent() {
        let detailEvent = DetailEventViewController(presenter: DetailEventPresenter())
        self.navigationController?.pushViewController(detailEvent, animated: true)
    }
}

extension SearchAppHomeViewController: UITableViewDelegate {
    
    func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {
        if let headerView = tableView.dequeueReusableHeaderFooterView(withIdentifier: "SearchEventTextFieldHeader") as? SearchEventTextFieldHeader {
            headerView.contentView.backgroundColor = .white
            return headerView
        } else { return UIView()}
    }
    
    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {

        return section == 1 ? 80 : 0
        
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return indexPath.section == 1 ? 150 : 135
    }
}

extension SearchAppHomeViewController: UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return section == 0 ? 1 : 10
    }
    
    func numberOfSections(in tableView: UITableView) -> Int {
        return 2
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        switch indexPath.section {
        case 0:
            if let cell = tableView.dequeueReusableCell(withIdentifier: "SearchEventLabelCell", for: indexPath) as? SearchEventLabelCell {
                return cell
            } else {
                return UITableViewCell()
            }
        case 1:
            if let cell = tableView.dequeueReusableCell(withIdentifier: "SearchResultCell", for: indexPath) as? SearchResultCell {
                cell.contentView.layer.cornerRadius = 20
                cell.btDetail.addTarget(self, action: #selector(gotoDetailEvent), for: .touchUpInside)
                return cell
            } else {
                return UITableViewCell()
            }
        default:
            return UITableViewCell()
        }
        
    }
    
    
    
}
