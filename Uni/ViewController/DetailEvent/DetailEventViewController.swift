//
//  DetailEventViewController.swift
//  Uni
//
//  Created nguyen gia huy on 03/11/2020.
//  Copyright Â© 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Edward
//

import UIKit

class DetailEventViewController: UIViewController {

	var presenter: DetailEventPresenterProtocol
    @IBOutlet weak var joinEvent: UILabel!
    @IBOutlet weak var contentEvent: UILabel!
    @IBOutlet weak var titleEvent: UILabel!
    @IBOutlet weak var scoreEvent: UILabel!
    @IBOutlet weak var dateEvent: UILabel!
    @IBOutlet weak var addressEvent: UILabel!
    var keyDetailEvent = ""
	init(presenter: DetailEventPresenterProtocol) {
        self.presenter = presenter
        super.init(nibName: "DetailEventViewController", bundle: nil)
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

	override func viewDidLoad() {
        super.viewDidLoad()

        presenter.view = self
        presenter.getDetailEvent(keyEvent: keyDetailEvent)
        
    }
    
}

extension DetailEventViewController: DetailEventViewProtocol {
    func fetchDetailSuccess() {
        let detail = presenter.detailEvent
        if let detail = detail {
            titleEvent.text = detail.title
            contentEvent.text = detail.content
            scoreEvent.text = "+\(detail.score ?? 0)"
            dateEvent.text = "\(detail.date ?? "") \n \(detail.checkin ?? "")-\(detail.checkout ?? "")"
            addressEvent.text = detail.address
            //joinEvent.text = detail.joinEvent
           
        } else { return }
    }
    
    func fetchDetailFailed() {
        print("Fetch Detail Event Failed")
    }
    
    
    
}
